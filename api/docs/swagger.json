{
    "swagger": "2.0",
    "info": {
        "description": "A simple microservice for storing and retrieving files, with S3/MinIO backend.",
        "title": "File Storage Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Provides a welcome message for the service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "General"
                ],
                "summary": "Welcome message",
                "responses": {
                    "200": {
                        "description": "message: Welcome to the File Storage Service. Visit /docs for API documentation.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "Lists all available files in the S3 bucket. Assumes authentication/authorization by gateway.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "List all files",
                "responses": {
                    "200": {
                        "description": "List of files",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.FileInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "detail: Failed to list files from storage.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads one or more files to the service. Assumes authentication/authorization by gateway.",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload files",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Files to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: Files uploaded successfully, uploaded_files: [filename1, filename2]",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "detail: No files provided for upload.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "413": {
                        "description": "detail: File exceeds the maximum allowed size.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "detail: Could not upload file.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/files/{filename}": {
            "get": {
                "description": "Retrieves a specific file by its filename. Assumes authentication/authorization by gateway.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Get a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the file to retrieve",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "detail: File not found.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "detail: Failed to retrieve file.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a specific file by its filename. Assumes authentication/authorization by gateway.",
                "tags": [
                    "Files"
                ],
                "summary": "Delete a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the file to delete",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "detail: Could not delete file.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Checks the health status of the service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "General"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "status: healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.FileInfo": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        }
    }
}